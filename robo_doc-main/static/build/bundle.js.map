{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte-ionicons/Menu.svelte","../../node_modules/svelte-ionicons/ChatbubbleEllipsesOutline.svelte","../../node_modules/svelte-ionicons/Send.svelte","../../node_modules/engine.io-parser/build/esm/commons.js","../../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../../node_modules/engine.io-parser/build/esm/index.js","../../node_modules/@socket.io/component-emitter/index.mjs","../../node_modules/engine.io-client/build/esm/globalThis.browser.js","../../node_modules/engine.io-client/build/esm/util.js","../../node_modules/engine.io-client/build/esm/transport.js","../../node_modules/engine.io-client/build/esm/contrib/yeast.js","../../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../../node_modules/engine.io-client/build/esm/transports/polling.js","../../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../../node_modules/engine.io-client/build/esm/transports/websocket.js","../../node_modules/engine.io-client/build/esm/transports/index.js","../../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../../node_modules/engine.io-client/build/esm/socket.js","../../node_modules/socket.io-parser/build/esm/is-binary.js","../../node_modules/socket.io-parser/build/esm/binary.js","../../node_modules/socket.io-parser/build/esm/index.js","../../node_modules/socket.io-client/build/esm/on.js","../../node_modules/socket.io-client/build/esm/socket.js","../../node_modules/socket.io-client/build/esm/contrib/backo2.js","../../node_modules/socket.io-client/build/esm/manager.js","../../node_modules/socket.io-client/build/esm/index.js","../../node_modules/socket.io-client/build/esm/url.js","../../src/components/message.svelte","../../src/components/chat.svelte","../../src/components/header.svelte","../../src/components/menu_bar.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'itemscope',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.52.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","<script>\n\texport let size = '24';\n\texport let color = 'currentColor';\n</script>\n\n<svg\n\txmlns=\"http://www.w3.org/2000/svg\"\n\tviewBox=\"0 0 512 512\"\n\t{...$$restProps}\n\twidth={size}\n\theight={size}\n\tfill={color}\n\tclass={$$props.class}\n\t><title>ionicons-v5-j</title><line\n\t\tx1=\"88\"\n\t\ty1=\"152\"\n\t\tx2=\"424\"\n\t\ty2=\"152\"\n\t\tstyle=\"fill:none;stroke:#000;stroke-linecap:round;stroke-miterlimit:10;stroke-width:48px\"\n\t/><line\n\t\tx1=\"88\"\n\t\ty1=\"256\"\n\t\tx2=\"424\"\n\t\ty2=\"256\"\n\t\tstyle=\"fill:none;stroke:#000;stroke-linecap:round;stroke-miterlimit:10;stroke-width:48px\"\n\t/><line\n\t\tx1=\"88\"\n\t\ty1=\"360\"\n\t\tx2=\"424\"\n\t\ty2=\"360\"\n\t\tstyle=\"fill:none;stroke:#000;stroke-linecap:round;stroke-miterlimit:10;stroke-width:48px\"\n\t/></svg\n>\n","<script>\n\texport let size = '24';\n\texport let color = 'currentColor';\n</script>\n\n<svg\n\txmlns=\"http://www.w3.org/2000/svg\"\n\tviewBox=\"0 0 512 512\"\n\t{...$$restProps}\n\twidth={size}\n\theight={size}\n\tfill={color}\n\tclass={$$props.class}\n\t><title>ionicons-v5-s</title><path\n\t\td=\"M87.48,380c1.2-4.38-1.43-10.47-3.94-14.86A42.63,42.63,0,0,0,81,361.34a199.81,199.81,0,0,1-33-110C47.64,139.09,140.72,48,255.82,48,356.2,48,440,117.54,459.57,209.85A199,199,0,0,1,464,251.49c0,112.41-89.49,204.93-204.59,204.93-18.31,0-43-4.6-56.47-8.37s-26.92-8.77-30.39-10.11a31.14,31.14,0,0,0-11.13-2.07,30.7,30.7,0,0,0-12.08,2.43L81.5,462.78A15.92,15.92,0,0,1,76.84,464a9.61,9.61,0,0,1-9.58-9.74,15.85,15.85,0,0,1,.6-3.29Z\"\n\t\tstyle=\"fill:none;stroke:#000;stroke-linecap:round;stroke-miterlimit:10;stroke-width:32px\"\n\t/><circle cx=\"160\" cy=\"256\" r=\"32\" /><circle cx=\"256\" cy=\"256\" r=\"32\" /><circle\n\t\tcx=\"352\"\n\t\tcy=\"256\"\n\t\tr=\"32\"\n\t/></svg\n>\n","<script>\n\texport let size = '24';\n\texport let color = 'currentColor';\n</script>\n\n<svg\n\txmlns=\"http://www.w3.org/2000/svg\"\n\tviewBox=\"0 0 512 512\"\n\t{...$$restProps}\n\twidth={size}\n\theight={size}\n\tfill={color}\n\tclass={$$props.class}\n\t><title>ionicons-v5-q</title><path\n\t\td=\"M476.59,227.05l-.16-.07L49.35,49.84A23.56,23.56,0,0,0,27.14,52,24.65,24.65,0,0,0,16,72.59V185.88a24,24,0,0,0,19.52,23.57l232.93,43.07a4,4,0,0,1,0,7.86L35.53,303.45A24,24,0,0,0,16,327V440.31A23.57,23.57,0,0,0,26.59,460a23.94,23.94,0,0,0,13.22,4,24.55,24.55,0,0,0,9.52-1.93L476.4,285.94l.19-.09a32,32,0,0,0,0-58.8Z\"\n\t/></svg\n>\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","<script lang=\"ts\">\r\n    export let message : Message;\r\n\r\n    interface Message {\r\n        from: \"bot\" | \"user\";\r\n        body: string;\r\n        on: number;\r\n    }\r\n\r\n    let isFromUser = message.from == \"user\";\r\n</script>\r\n\r\n<div class=\"container\">\r\n    <div class=\"{isFromUser ? 'message user' : 'message'}\">\r\n        {message.body}\r\n    </div>\r\n</div>\r\n\r\n<style>\r\n    .container{\r\n        width: 100%;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n        padding-top: 10px;\r\n        padding-bottom: 10px;\r\n        padding-left: 10px;\r\n    }\r\n    .message{\r\n        width: 50%;\r\n        border-radius: 20px;\r\n        background-color: #19192B;\r\n        padding: 16px;\r\n    }\r\n\r\n    .user{\r\n        align-self: flex-end;\r\n        background-color: #4D38A2;\r\n    }\r\n</style>","<script lang=\"ts\">\r\n    import { Send } from \"svelte-ionicons\";\r\n    import io from \"socket.io-client\";\r\n    import Message from \"./message.svelte\";\r\n\r\n    interface Message {\r\n        from: \"bot\" | \"user\";\r\n        body: string;\r\n        on: number;\r\n    }\r\n\r\n    var socket = io(\"/test\");\r\n    socket.on(\"connect\", function () {\r\n        console.log(\"connected\");\r\n    });\r\n\r\n    const sendMessage = () => {\r\n        const input = document.querySelector(\"input\");\r\n        const data = input.value;\r\n        socket.emit(\"user_input\", {\r\n            data: data,\r\n        });\r\n        input.value = null;\r\n        addToMessages({\r\n            body: data,\r\n            from: \"user\",\r\n            on: Date.now(),\r\n        });\r\n        return false;\r\n    };\r\n\r\n    socket.on(\"bot_response\", function (data) {\r\n        setTimeout(() => {\r\n            addToMessages({\r\n                body: data.response,\r\n                from: \"bot\",\r\n                on: Date.now(),\r\n            });\r\n        }, Math.floor(Math.random() * 2000) + 1000);\r\n    });\r\n\r\n    let messages: Array<Message> = [];\r\n\r\n    const addRandomMessage = () => {\r\n        addToMessages({\r\n            body: \"random text\",\r\n            from: Math.random() > 0.5 ? \"bot\" : \"user\",\r\n            on: Date.now(),\r\n        });\r\n    };\r\n\r\n    const addToMessages = (msg: Message) => {\r\n        messages.push(msg);\r\n        messages = messages;\r\n        setTimeout(() => {\r\n            var objDiv = document.querySelector(\r\n                \"div[data-selector='messages']\"\r\n            );\r\n            objDiv.scrollTop = objDiv.scrollHeight;\r\n        }, 100);\r\n    };\r\n</script>\r\n\r\n<div class=\"chat\">\r\n    <div class=\"welcome-message\">\r\n        <div class=\"headline\">Welcome to the killer robot ai</div>\r\n        <p style=\"font-size: 15px;\">\r\n            I can help you find your disease and doctors nearby, or will i 😈\r\n        </p>\r\n    </div>\r\n    <div class=\"container\">\r\n        <div class=\"messages\" data-selector=\"messages\">\r\n            {#each messages as msg}\r\n                <Message message={msg} />\r\n            {/each}\r\n        </div>\r\n        <div class=\"text-box\">\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Write your deathwish...\"\r\n                on:keydown={(e) => (e.key == \"Enter\" ? sendMessage() : null)}\r\n            />\r\n            &nbsp; &nbsp; &nbsp; &nbsp;\r\n            <div on:click={sendMessage}><Send /></div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<style>\r\n    .messages {\r\n        overflow-y: scroll !important;\r\n        overflow-x: hidden;\r\n        width: 92vw;\r\n        height: 70vh;\r\n        scroll-behavior: smooth;\r\n    }\r\n    .welcome-message {\r\n        padding: 20px;\r\n        background: linear-gradient(90deg, #121928, rgba(0, 212, 255, 0) 100%);\r\n    }\r\n    .headline {\r\n        color: #2f6397;\r\n        font-size: 20px;\r\n    }\r\n\r\n    .text-box {\r\n        padding-left: 16px;\r\n        width: 100%;\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n        user-select: none;\r\n    }\r\n\r\n    input {\r\n        background-color: transparent;\r\n        outline: none;\r\n        border: 0.1px solid grey;\r\n        border-radius: 8px;\r\n        padding: 10px 16px;\r\n        width: 100%;\r\n        color: white;\r\n        font-size: 18px;\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\r\n    import { ChatbubbleEllipsesOutline } from \"svelte-ionicons\";\r\n</script>\r\n\r\n<div class=\"header\">\r\n    <div class=\"first\">\r\n        <ChatbubbleEllipsesOutline size=\"40\" />\r\n        &nbsp; &nbsp; &nbsp;\r\n        <div>Chitti</div>\r\n    </div>\r\n    <div class=\"last\">\r\n        <div class=\"img\"></div>\r\n    </div>\r\n</div>\r\n\r\n<style>\r\n    .header {\r\n        padding-left: 20px;\r\n        padding-right: 20px;\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        border-bottom: 0.5px solid rgb(64, 62, 62);\r\n        width: 100%;\r\n        height: 100px;\r\n    }\r\n    .header .first {\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n    }\r\n    .header .first {\r\n        font-weight: 600;\r\n        font-size: larger;\r\n    }\r\n    .img {\r\n        border-radius: 50%;\r\n        height: 50px;\r\n        width: 50px;\r\n        background-size: cover;\r\n        background-image: url('https://images.unsplash.com/photo-1457449940276-e8deed18bfff?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Nnx8cHJvZmlsZXxlbnwwfHwwfHw%3D&w=1000&q=80');\r\n        background-repeat: no-repeat;\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\r\n    import { Menu } from \"svelte-ionicons\";\r\n</script>\r\n\r\n<div class=\"menu-bar\">\r\n    <Menu size=\"40\" />\r\n</div>\r\n\r\n<style>\r\n    .menu-bar {\r\n        padding-top: 20px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        border-right: 0.5px solid rgb(64, 62, 62);\r\n        width: 100px;\r\n        height: 100vh;\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\n\timport Chat from \"./components/chat.svelte\";\n\timport Header from \"./components/header.svelte\";\n\timport MenuBar from \"./components/menu_bar.svelte\";\n\n\tconst load = () => {\n\t\tconst main = document.querySelector<HTMLDivElement>(\n\t\t\t\"main[data-selector = 'main']\"\n\t\t)!;\n\t\tmain.style.filter = \"blur(0px)\";\n\t};\n</script>\n\n<svelte:window on:load={load} />\n\n<main data-selector=\"main\">\n\t<div class=\"row\">\n\t\t<MenuBar />\n\t\t<div class=\"column\">\n\t\t\t<Header />\n\t\t\t<Chat />\n\t\t</div>\n\t</div>\n</main>\n\n<style>\n\tmain {\n\t\tfilter: blur(50px);\n\t\ttransition: filter 750ms;\n\t}\n\t.row {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t}\n\t.column {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\twidth: 92vw;\n\t}\n</style>\n","import App from './App.svelte';\r\nconst app = new App({\r\n    target: document.body,\r\n    props: {\r\n        name: 'world'\r\n    }\r\n});\r\nexport default app;\r\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","exclude_internal_props","props","result","compute_rest_props","keys","rest","Set","has","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_svg_attributes","attributes","key","set_style","important","style","removeProperty","setProperty","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","seen_callbacks","flushidx","flush","saved_component","length","update","$$","pop","i","callback","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","d","get_spread_update","levels","updates","to_null_out","accounted_for","$$scope","n","undefined","create_component","mount_component","customElement","m","new_on_destroy","on_mount","map","filter","on_destroy","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","class","svg_class_value","svg","title","line0","line1","line2","size","color","path","circle0","circle1","circle2","PACKET_TYPES","PACKET_TYPES_REVERSE","ERROR_PACKET","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","encodePacket","supportsBinary","encodeBlobAsBase64","isView","buffer","fileReader","FileReader","onload","content","split","readAsDataURL","chars","lookup","Uint8Array","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","Emitter","mixin","on","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","cb","emit","args","slice","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","reduce","acc","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","globalThis","clearTimeoutFn","TransportError","Error","constructor","reason","description","super","Transport","writable","query","readyState","socket","onError","open","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","packet","onPacket","details","alphabet","prev","seed","encode","num","encoded","Math","floor","yeast","now","Date","str","encodeURIComponent","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","join","empty","hasXHR2","responseType","Request","uri","method","async","xd","xscheme","xs","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","transports","websocket","forceBase64","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","schema","secure","port","Number","timestampRequests","timestampParam","b64","encodedQuery","hostname","polling","location","isSSL","protocol","poll","pause","onPause","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","encodePayload","doWrite","sid","request","req","xhrStatus","pollXhr","re","parts","parse","replace","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","qs","qry","pairs","pair","decodeURIComponent","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","transport","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","shift","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","freezeTransport","error","onTransportClose","onupgrade","to","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","utf8Length","ceil","byteLength","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","Socket$1","withNativeFile","File","isBinary","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","Decoder","reviver","reconstructor","decodeString","BINARY_EVENT","BINARY_ACK","BinaryReconstructor","takeBinaryData","start","buf","nsp","next","payload","tryParse","substr","isPayloadValid","static","CONNECT","DISCONNECT","CONNECT_ERROR","EVENT","ACK","destroy","finishedReconstruction","reconPack","binData","replacer","encodeAsString","encodeAsBinary","stringify","deconstruction","unshift","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","ack","_registerAckCallback","isTransportWritable","engine","volatile","notifyOutgoingListeners","timer","_packet","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","Encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex","t_value","body","div1","div0","wholeText","set_data","t","isFromUser","div6","div5","div2","div4","input","div3","r","each_blocks","iterations","console","log","sendMessage","querySelector","addToMessages","response","messages","objDiv","scrollTop","scrollHeight","div","main"],"mappings":"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"}